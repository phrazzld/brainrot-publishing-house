{
  "name": "brainrot-publishing-house",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "engines": {
    "node": ">=22.0.0"
  },
  "installConfig": {
    "pnpm": {
      "peerDependencyRules": {
        "allowedVersions": {
          "react": "19"
        }
      }
    }
  },
  "// NOTE": "This project requires --legacy-peer-deps to install due to React 19 compatibility issues with @testing-library/react",
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "setup": "npm install --legacy-peer-deps",
    "start": "next start",
    "lint": "next lint",
    "lint:strict": "eslint --max-warnings=0 .",
    "prettier:check": "prettier --check .",
    "prettier:fix": "prettier --write .",
    "format": "npm run prettier:fix",
    "security:audit": "npm audit --audit-level=high",
    "security:custom": "tsx scripts/security-audit.ts",
    "deployment:validate": "node scripts/validate-security-config.js",
    "deployment:backup": "node scripts/deployment-rollback.js backup",
    "deployment:rollback": "node scripts/deployment-rollback.js rollback",
    "deployment:rollback:detect": "node scripts/deployment-rollback.js detect",
    "deployment:rollback:validate": "node scripts/deployment-rollback.js validate",
    "test": "jest --config=jest.config.cjs",
    "test:watch": "jest --config=jest.config.cjs --watch",
    "test:coverage": "jest --config=jest.config.cjs --coverage",
    "inventory": "tsx scripts/inventory-assets.ts",
    "inventory:md": "tsx scripts/inventory-assets.ts --format=md --output=asset-inventory.md",
    "migrate:cover-images": "tsx scripts/migrateBookCoverImages.ts",
    "migrate:cover-images:dry": "tsx scripts/migrateBookCoverImages.ts --dry-run",
    "migrate:chapter-images": "tsx scripts/migrateBookChapterImages.ts",
    "migrate:chapter-images:dry": "tsx scripts/migrateBookChapterImages.ts --dry-run",
    "migrate:brainrot-text": "tsx scripts/migrateBrainrotTextFiles.ts",
    "migrate:brainrot-text:dry": "tsx scripts/migrateBrainrotTextFiles.ts --dry-run",
    "validate:asset-names": "tsx scripts/validateAssetNames.ts",
    "validate:asset-names:fix": "tsx scripts/validateAssetNames.ts --fix",
    "validate:asset-names:verbose": "tsx scripts/validateAssetNames.ts --verbose",
    "migrate:source-text": "tsx scripts/migrateSourceTextFiles.ts",
    "migrate:source-text:dry": "tsx scripts/migrateSourceTextFiles.ts --dry-run",
    "verify:blob": "tsx scripts/verifyBlobStorage.ts",
    "verify:cdn": "tsx scripts/verifyCdnUrls.ts",
    "verify:cdn:md": "tsx scripts/verifyCdnUrls.ts --format=md --output=cdn-url-verification.md",
    "verify:cdn:verbose": "tsx scripts/verifyCdnUrls.ts --verbose",
    "security:scan": "tsx scripts/security-scan.ts",
    "security:scan:github": "tsx scripts/security-scan.ts --github --verbose",
    "security:scan:report": "tsx scripts/security-scan.ts --output security-report.html --format html --github",
    "verify:cdn:compare": "tsx scripts/verifyCdnUrls.ts --compare-file=cdn-url-verification.json",
    "cleanup:assets": "tsx scripts/cleanupLocalAssets.ts",
    "cleanup:assets:delete": "tsx scripts/cleanupLocalAssets.ts --delete",
    "setup:hooks": "bash scripts/setup-hooks.sh",
    "reorganize:blob": "tsx scripts/reorganize-blob-paths.ts",
    "reorganize:blob:dry": "tsx scripts/reorganize-blob-paths.ts --dry-run",
    "reorganize:blob:verbose": "tsx scripts/reorganize-blob-paths.ts --verbose",
    "audit:text": "tsx scripts/auditTextAssets.ts",
    "audit:text:verbose": "tsx scripts/auditTextAssets.ts --verbose",
    "audit:image": "tsx scripts/auditImageAssets.ts",
    "audit:image:verbose": "tsx scripts/auditImageAssets.ts --verbose",
    "audit:audio": "tsx scripts/auditAudioAssets.ts",
    "audit:audio:verbose": "tsx scripts/auditAudioAssets.ts --verbose",
    "audit:all": "npm run audit:text && npm run audit:image && npm run audit:audio",
    "plan:reorganization": "tsx scripts/generateReorganizationPlan.ts",
    "plan:reorganization:verbose": "tsx scripts/generateReorganizationPlan.ts --verbose",
    "test:e2e:downloads": "tsx scripts/verify-end-to-end-downloads.ts",
    "test:e2e:downloads:production": "tsx scripts/verify-end-to-end-downloads.ts --env=production",
    "benchmark:downloads": "tsx scripts/benchmark-downloads.ts",
    "benchmark:downloads:production": "tsx scripts/benchmark-downloads.ts --env=production",
    "verify:migration": "tsx scripts/verify-migration-completion.ts",
    "verify:migration:production": "tsx scripts/verify-migration-completion.ts --env=production",
    "migrate:full-audiobooks": "tsx scripts/migrateFullAudiobooks.ts",
    "migrate:full-audiobooks:dry": "tsx scripts/migrateFullAudiobooks.ts --dry-run",
    "migrate:full-audiobooks:verbose": "tsx scripts/migrateFullAudiobooks.ts --verbose",
    "standardize:text": "tsx scripts/standardizeTextFiles.ts",
    "standardize:text:dry": "tsx scripts/standardizeTextFiles.ts --dry-run",
    "standardize:text:verbose": "tsx scripts/standardizeTextFiles.ts --dry-run --log-file=text-standardization-dry-run.log",
    "standardize:text:production": "tsx scripts/standardizeTextFiles.ts --log-file=text-standardization.log",
    "standardize:text:blob": "tsx scripts/standardizeTextFilesBlob.ts",
    "standardize:text:blob:dry": "tsx scripts/standardizeTextFilesBlob.ts --dry-run",
    "standardize:text:blob:verbose": "tsx scripts/standardizeTextFilesBlob.ts --dry-run --log-file=text-standardization-blob-dry-run.log",
    "verify:text": "tsx scripts/verifyTextMigration.ts",
    "verify:audio-files": "tsx scripts/verifyAudioFilesAccess.ts",
    "verify:audio-files:skip-check": "tsx scripts/verifyAudioFilesAccess.ts --skip-access-check",
    "test:audio-downloads": "tsx scripts/testAudioFileDownloads.ts",
    "test:audio-downloads:production": "tsx scripts/testAudioFileDownloads.ts --env=production",
    "fix:imports": "tsx scripts/add-js-extensions.ts",
    "fix:imports:dry": "tsx scripts/add-js-extensions.ts --dry-run",
    "fix:imports:utils": "tsx scripts/add-js-extensions.ts ./utils",
    "fix:imports:tests": "tsx scripts/add-js-extensions.ts ./__tests__",
    "fix:imports:services": "tsx scripts/add-js-extensions.ts ./services",
    "tsc": "tsc --noEmit",
    "prepare": "husky"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.826.0",
    "@octokit/rest": "^22.0.0",
    "@vercel/blob": "^1.1.1",
    "@wavesurfer/react": "^1.0.11",
    "cheerio": "^1.0.0",
    "dotenv": "^16.5.0",
    "gsap": "^3.12.5",
    "next": "^15.3.3",
    "openai": "^4.80.1",
    "pino": "^9.6.0",
    "pino-pretty": "^13.0.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "semver": "^7.7.2",
    "wavesurfer.js": "^7.8.14"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.26.9",
    "@babel/preset-react": "^7.26.3",
    "@babel/preset-typescript": "^7.27.0",
    "@eslint/js": "^9.25.1",
    "@jest/globals": "^29.7.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^15.0.7",
    "@trivago/prettier-plugin-sort-imports": "^5.2.2",
    "@types/jest": "^29.5.12",
    "@types/minimist": "^1.2.5",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/semver": "^7.7.0",
    "@typescript-eslint/eslint-plugin": "^8.31.0",
    "@typescript-eslint/parser": "^8.31.0",
    "autoprefixer": "^10.4.20",
    "babel-jest": "^29.7.0",
    "babel-plugin-transform-import-meta": "^2.3.2",
    "eslint": "^9.25.1",
    "eslint-config-next": "^15.3.1",
    "eslint-config-prettier": "^10.1.2",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.2.6",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-security-node": "^1.1.4",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-ts-webcompat-resolver": "^1.0.1",
    "lint-staged": "^15.5.1",
    "postcss": "^8.4.49",
    "prettier": "^3.5.3",
    "puppeteer": "^24.7.2",
    "snyk": "^1.1297.1",
    "tailwindcss": "^3.4.17",
    "ts-jest": "^29.3.2",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.3",
    "typescript": "^5.8.3",
    "yaml": "^2.8.0"
  },
  "lint-staged": {
    "package.json": [
      "prettier --write"
    ],
    "*.{ts,tsx,js,jsx,json,md,css,scss,yml,yaml}": [
      "prettier --write"
    ],
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix --max-warnings=10"
    ]
  }
}
